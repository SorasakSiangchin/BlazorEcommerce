@inject NavigationManager NavigationManager;
@inject IProductService ProductService;
@using Microsoft.AspNetCore.Components.Web;

@*
    input => {
        bind-value : เชื่อมค่าข้อมูล
        list : เป็นตัวบอกว่าเป็น List ของไคร
        onkeyup : ตอนพิมพ์
        ref : ตรวจจับ input
    };
*@

<div class="input-group">
    <input @bind-value="searchText"
           @bind-value:event="oninput"
           type="search"
           list="products"
           @onkeyup="HandleSearch"
           class="form-control"
           placeholder="Search..."
           @ref="searchInput" />
    <datalist id="products">
        @foreach (var suggestion in suggestions)
        {
            <option>@suggestion</option>
        }
    </datalist>
    <div class="input-group-append">
        <button class="btn btn-primary" @onclick="SearchProducts">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
</div>

@code {
    private string searchText = string.Empty;
    private List<string> suggestions = new List<string>();
    protected ElementReference searchInput;

    // แสดงหลังจากเปิด
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await searchInput.FocusAsync();
        }
    }

    public void SearchProducts()
    {
        NavigationManager.NavigateTo($"search/{searchText}/1"); // /1 ให้แสดงหน้าแรก
    }

    // KeyboardEventArgs => จัดการเหตุการของ Keyboard
    public async Task HandleSearch(KeyboardEventArgs arge)
    {
        // กรณีกด Enter
        if (arge.Key == null || arge.Key == "Enter")
        {
            SearchProducts();
        }
        // กรณีพิมพ์
        else if (searchText.Length > 1)
        {
            suggestions = await ProductService.GetProductSearchSuggestions(searchText);
        }
    }

}
